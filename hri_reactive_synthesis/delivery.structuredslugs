[INPUT]
# human
#work
wait
#next_state_is_workstation
obstacle_1
obstacle_2
workload:0...25
complete_work_at_workstation

[OUTPUT]
# robot
r_state:0...3
workload_add:0...15
next_state_is_workstation
complete_work_with_robot


[ENV_INIT]
!wait
!complete_work_at_workstation 

[SYS_INIT]
r_state = 0
!next_state_is_workstation
!complete_work_with_robot


[ENV_TRANS]
# Obstacles will get out of the way
obstacle_1 -> !obstacle_1'
obstacle_2 -> !obstacle_2'
# Obstacle will not intentionally interfere with the robot
r_state = 1 -> !obstacle_1
r_state = 2 -> !obstacle_2

workload = 0 & r_state != 3 -> wait
workload != 0 -> !wait
wait & (workload + workload_add = 0) -> wait' 

next_state_is_workstation & workload+workload_add <= 25 -> (workload' = workload+workload_add)
next_state_is_workstation & workload+workload_add >  25 -> (workload' = 25)

(!next_state_is_workstation & !wait) -> (workload'+1 = workload)

workload' < workload -> complete_work_at_workstation'
next_state_is_workstation -> !complete_work_at_workstation'

[ENV_LIVENESS]


[SYS_TRANS]
(r_state' = 3)  -> next_state_is_workstation
(r_state' != 3) -> !next_state_is_workstation

r_state = 2 & next_state_is_workstation -> workload_add = 15
(next_state_is_workstation & (workload_add = 0 || workload_add = 15)) || (!next_state_is_workstation & workload_add = 0)

next_state_is_workstation & complete_work_at_workstation -> complete_work_with_robot' 

complete_work_with_robot & r_state' != 0 -> complete_work_with_robot'
complete_work_with_robot & r_state' = 0  -> !complete_work_with_robot'

(r_state = 0) & (obstacle_1) -> (r_state' = 0) 
(r_state = 2) & (obstacle_1) -> (r_state' = 2) || (r_state' = 3) 
(r_state = 1) & (obstacle_2) -> (r_state' = 1) || (r_state' = 0) 
(r_state = 3) & (obstacle_2) -> (r_state' = 3) 

(r_state = 0) -> (r_state' = 0) || (r_state' = 1)
(r_state = 1) -> (r_state' = 0) || (r_state' = 1) || (r_state' = 2)
(r_state = 2) -> (r_state' = 1) || (r_state' = 2) || (r_state' = 3)
(r_state = 3) -> (r_state' = 2) || (r_state' = 3)


[SYS_LIVENESS]
(workload > 0) & (workload <= 20) & (r_state = 3) & (workload_add > 0)
